services:
  backend:
    image: plantimeback.api
    build:
      context: .
      dockerfile: PlanTime.Api/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: "plantime.webtm.ru"
      HTTP_PORTS: "9090"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - backend
    restart: always
    ports:
      - "9090:9090"
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 1024M
        reservations:
          memory: 512M
          
  database:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'password'
      POSTGRES_DB: 'plan_time'
    networks:
      - backend
    ports:
      - "50000:5432"
    volumes:
      - postgres_database:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
      
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server --console-address ":9001" /data
    networks:
      backend:
        
networks:
  backend:
    driver: bridge
    
volumes:
  postgres_database:
  minio_storage:
    driver: local